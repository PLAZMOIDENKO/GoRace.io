extends Node

const SAVE_PATH := "user://UPlayForge_GoRaceREDUX.json"

func _init():
	if not FileAccess.file_exists(SAVE_PATH):
		# –¥–µ—Ñ –¥–∞—Ç–∞ –µ—Å–ª–∏ –ø—Ä–æ–µ–±–∞–ª —Ñ–∞–π–ª
		var default_data = {
			"player": {
				"id": 1,
				"name": "ENTER NAME...",
				"telegram_id": 1,
				"rang": "THANKS FOR INSTALLATION",
				"lvl": 1,
				"MaxScore": 0
			},
			"car": {
				"color": "defs",
				"upgrade": {
					"acceleration": 1.2,
					"braking": 1.1,
					"turning": 1.2
				}
			}
		}
		_save_json(default_data)


func _load():
	var data = _load_json()
	if data:
		if data.has("player"):
			Global.player = data.player
			if not Global.player.has("MaxScore"):
				Global.player["MaxScore"] = 0
			# üëá –¥–æ–±–∞–≤—å —ç—Ç—É —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã MaxScore –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω –æ—Ç–¥–µ–ª—å–Ω–æ
			Global.MaxScore = Global.player["MaxScore"]
			
		if data.has("car"):
			Global.car = data.car




func _save():
	var data = {
		"player": Global.player,
		"car": Global.car
	}
	_save_json(data)


# ‚Äî‚Äî‚Äî‚Äî‚Äî –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ‚Äî‚Äî‚Äî‚Äî‚Äî #

func _load_json() -> Dictionary:
	var file := FileAccess.open(SAVE_PATH, FileAccess.READ)
	if file:
		var text := file.get_as_text()
		var result: Variant = JSON.parse_string(text)
		if typeof(result) == TYPE_DICTIONARY:
			return result
		else:
			push_error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: –Ω–µ —Å–ª–æ–≤–∞—Ä—å")
	return {}

func _save_json(data: Dictionary) -> void:
	var file := FileAccess.open(SAVE_PATH, FileAccess.WRITE)
	if file:
		var text := JSON.stringify(data, "\t") # —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏
		file.store_string(text)
		file.close()
